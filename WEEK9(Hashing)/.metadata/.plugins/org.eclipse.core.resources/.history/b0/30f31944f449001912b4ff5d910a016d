import java.util.Iterator;

/**
 * A driver that demonstrates the class HashedDictionary. Note: The class Name
 * overrides hashCode in a way that causes collisions within the method
 * testHashTable.
 * 
 * @author Frank M. Carrano
 * @author Timothy M. Henry
 * @version 5.0
 * 
 * @author mhrybyk
 * 
 * Moved dictionary creation to main code, and have test methods call as arguments.
 * Allows for easy changing of dictionary implementation for test
 * Removed use of internal display() method for dictionary, not wise to use anyway.
 * Just interferes with testing interface implementation.
 * Modified display() method to include hash code.
 * 
 */
public class HashedDictionaryDemo

{
	public static void main(String[] args) {
		// uncomment out Completed to test implementation
		
		DictionaryInterface<String, String> telephoneDirectory = new HashedDictionary<>();
//		DictionaryInterface<String, String> telephoneDirectory = new HashMapDictionary<>();
//		DictionaryInterface<String, String> telephoneDirectory = new CompletedHashMapDictionary<>();
		testDictionary(telephoneDirectory);
		
		DictionaryInterface<Name, String> nameList = new HashedDictionary<>();
//		DictionaryInterface<Name, String> nameList = new HashMapDictionary<>();
//		DictionaryInterface<Name, String> nameList = new CompletedHashMapDictionary<>();
		testHashTable(nameList);
		System.out.println("\n\nDone.");
	} // end main

	public static void testDictionary(DictionaryInterface<String, String> telephoneDirectory) {
		String dirk = "Dirk";
		String abel = "Abel";
		String miguel = "Miguel";
		String tabbie = "Tabatha";
		String tom = "Tom";
		String sam = "Sam";
		String reiss = "Reiss";
		String bette = "Bette";
		String carole = "Carole";
		String derek = "Derek";
		String nancy = "Nancy";
		String bogus = "Bo";
		
		// clear the dictionary first
		
		telephoneDirectory.clear();

		System.out.println("testDictionary(): Create a hashed dictionary of names and phone numbers");
		System.out.println("Initial dictionary should be empty; isEmpty() returns " + telephoneDirectory.isEmpty());

// Test add
		System.out.println("Testing add():");
		telephoneDirectory.add(dirk, "555-1234");
		telephoneDirectory.add(abel, "555-5678");
		telephoneDirectory.add(miguel, "555-9012");
		telephoneDirectory.add(tabbie, "555-3456");
		telephoneDirectory.add(tom, "555-5555");
		telephoneDirectory.add(sam, "555-7890");
		telephoneDirectory.add(reiss, "555-2345");
		telephoneDirectory.add(bette, "555-7891");
		telephoneDirectory.add(carole, "555-7892");
		telephoneDirectory.add(derek, "555-7893");
		telephoneDirectory.add(nancy, "555-7894");

		System.out.println(telephoneDirectory.getSize() + " (should be 11) items in dictionary, as follows:");
//		display(telephoneDirectory);=
		
//		telephoneDirectory.displayHashTable();

// Test getValue
		System.out.println("*** Testing getValue(): ***");
		System.out.println("Abel:   " + telephoneDirectory.getValue(abel) + " should be 555-5678");
		System.out.println("Sam:    " + telephoneDirectory.getValue(sam) + " should be 555-7890");
		System.out.println("Tom:    " + telephoneDirectory.getValue(tom) + " should be 555-5555");
		System.out.println("Reiss:  " + telephoneDirectory.getValue(reiss) + " should be 555-2345");
		System.out.println("Miguel: " + telephoneDirectory.getValue(miguel) + " should be 555-9012");

// Test contains
		System.out.println("*** Testing contains(): ***");

		if (telephoneDirectory.contains(sam))
			System.out.println("Sam is in dictionary - OK");
		else
			System.out.println("Error in contains()");

		if (telephoneDirectory.contains(abel))
			System.out.println("Abel is in dictionary - OK");
		else
			System.out.println("Error in contains()");

		if (telephoneDirectory.contains(miguel))
			System.out.println("Miguel is in dictionary - OK");
		else
			System.out.println("Error in contains()");

		if (telephoneDirectory.contains(tom))
			System.out.println("Tom is in dictionary - OK");
		else
			System.out.println("Error in contains()");

		if (!telephoneDirectory.contains(bogus))
			System.out.println("Bo is not in dictionary - OK");
		else
			System.out.println("Error in contains()");

// Remove first item
		System.out.println(
				"Removing first item Abel - Abel's number is " + telephoneDirectory.remove(abel) + " should be 555-5678");

// Test replacing value
		System.out.println("Replacing phone number of Reiss and Miguel:");
		String oldNumber = telephoneDirectory.add(reiss, "555-5432");
		System.out.println("Reiss's old number " + oldNumber + " is replaced by 555-5432");
		oldNumber = telephoneDirectory.add(miguel, "555-2109");
		System.out.println("Miguel's old number " + oldNumber + " is replaced by 555-2109");

		System.out.println("Dictionary size is " + telephoneDirectory.getSize() + " (should be 10) items in dictionary, as follows:");
		display(telephoneDirectory);

// Remove interior and last items
		System.out.println("Removing interior item Reiss:");
		telephoneDirectory.remove(reiss);
		System.out.println("Dictionary size is " + telephoneDirectory.getSize() + " (should be 9) items in dictionary, as follows:");
		display(telephoneDirectory);
		System.out.println("Removing Nancy:");
		telephoneDirectory.remove(nancy);
		System.out.println("Dictionary size is " + telephoneDirectory.getSize() + " (should be 8) items in dictionary, as follows:");
		display(telephoneDirectory);

// Remove Bo (not in dictionary)
		System.out.println("Removing Bo (not in dictionary):");
		String result = telephoneDirectory.remove(bogus);
		if (result == null)
			System.out.println("Bo was not found in the dictionary.");
		else
			System.out.println("Error in remove().");

		System.out.println("Dictionary size is " + telephoneDirectory.getSize() + " (should be 8) items in dictionary, as follows:");
		display(telephoneDirectory);

// Test clear
		System.out.println("Testing clear():");
		telephoneDirectory.clear();

		System.out.println("Dictionary should be empty; isEmpty() returns " + telephoneDirectory.isEmpty());
	} // testDictionary

	/** Tests the hash table when no locations contain null */
	public static void testHashTable(DictionaryInterface<Name, String> nameList) {
		// Declaring the type of nameList as HashedDictionary instead of
		// DictionaryInterface
		// enables us to use the displayHashTable method defined in HashedDictionary
//		CompletedHashedDictionary<Name, String> nameList = new CompletedHashedDictionary<>();

		System.out.println("-----------------------------------------------------------------------");
		System.out.println("testHashTable():");

		nameList.clear();
		System.out.println("Create a dictionary whose initial hash table has 5 locations:");
		System.out.println("Initial dictionary should be empty; isEmpty() returns " + nameList.isEmpty());

		// Add 5 names - rehashing will not occur, since the load factor will be < 0.5
		System.out.println("Testing add() - add 5 names:");
		nameList.add(new Name("Tabatha"), "555-1234");
		nameList.add(new Name("Toni"), "555-1235");
		nameList.add(new Name("Tobbie"), "555-1236");
		nameList.add(new Name("Tabbie"), "555-1237");
		nameList.add(new Name("Tim"), "555-1238");

		System.out.println("Dictionary size is " + nameList.getSize() + " (should be 5) items, as follows:\n");
		display(nameList);

//		nameList.displayHashTable(); // Display hash table [METHOD ADDED TO CLASS FOR TESTING PURPOSES]

		// We now remove a name and add a name, so the table size remains the same. Our
		// goal is to remove
		// null from all table locations. Then we will test the method contains() in
		// this situation.

		System.out.println("Remove Tabatha, add Nancy:");
		nameList.remove(new Name("Tabatha"));
		nameList.add(new Name("Nancy"), "555-1239");
		System.out.println("Dictionary contains " + nameList.getSize() + " (should be 5) items, as follows:\n");
		display(nameList);

//		nameList.displayHashTable();
		System.out.println("....................................");

		System.out.println("Remove Toni, add Derek:");
		nameList.remove(new Name("Toni"));
		nameList.add(new Name("Derek"), "555-1240");
		System.out.println("Dictionary contains " + nameList.getSize() + " (should be 5) items, as follows:\n");
		display(nameList);

//		nameList.displayHashTable();
		System.out.println("....................................");

		System.out.println("Remove Tabbie, add Carole:");
		nameList.remove(new Name("Tabbie"));
		nameList.add(new Name("Carole"), "555-1241");
		System.out.println("Dictionary contains " + nameList.getSize() + " (should be 5) items, as follows:\n");
		display(nameList);

//		nameList.displayHashTable();
		System.out.println("....................................");

		System.out.println("Remove Tobbie, add Bette:");
		nameList.remove(new Name("Tobbie"));
		nameList.add(new Name("Bette"), "555-1242");
		System.out.println("Dictionary contains " + nameList.getSize() + " (should be 5) items, as follows:\n");
		display(nameList);

//		nameList.displayHashTable();
		System.out.println("....................................");

		System.out.println("Remove Tim, add Reiss:");
		nameList.remove(new Name("Tim"));
		nameList.add(new Name("Reiss"), "555-1243");
		System.out.println("Dictionary contains " + nameList.getSize() + " (should be 5) items, as follows:\n");
		display(nameList);
	
//		nameList.displayHashTable();
		System.out.println("....................................");

		System.out.println("Remove Derek, add Miguel:");
		nameList.remove(new Name("Derek"));
		nameList.add(new Name("Miguel"), "555-1244");
		System.out.println("Dictionary contains " + nameList.getSize() + " (should be 5) items, as follows:\n");
		display(nameList);

//		nameList.displayHashTable();
		System.out.println("....................................");

		System.out.println("Remove Bette, add Tom:");
		nameList.remove(new Name("Bette"));
		nameList.add(new Name("Tom"), "555-1245");
		System.out.println("Dictionary contains " + nameList.getSize() + " (should be 5) items, as follows:\n");
		display(nameList);

//		nameList.displayHashTable();
		System.out.println("....................................");

		System.out.println("Locate Reis, Carole, Nancy, and Zeke: ");
		if (nameList.contains(new Name("Reiss")))
			System.out.println("Reis is in the dictionary ");
		else
			System.out.println("Reis is NOT in the dictionary: ERROR ");

		if (nameList.contains(new Name("Carole")))
			System.out.println("Carole is in the dictionary ");
		else
			System.out.println("Carole is NOT in the dictionary: ERROR ");

		if (nameList.contains(new Name("Nancy")))
			System.out.println("Nancy is in the dictionary ");
		else
			System.out.println("Nancy is NOT in the dictionary: ERROR ");

		if (nameList.contains(new Name("Zeke")))
			System.out.println("Zeke is in the dictionary: ERROR ");
		else
			System.out.println("Zeke is NOT in the dictionary ");
	} // testHashTable

	public static <S, T> void display(DictionaryInterface<S, T> dictionary) {
		Iterator<S> keyIterator = dictionary.getKeyIterator();
		Iterator<T> valueIterator = dictionary.getValueIterator();

		System.out.println("**** Displaying dictionary size = " + dictionary.getSize());
		while (keyIterator.hasNext() && valueIterator.hasNext()) {
			S key = keyIterator.next();
			T value = valueIterator.next();
			
			System.out.println(key + " (" + key.hashCode() + "): " + value);
		}
		System.out.println();
	} // end display
} // end Driver
/*
 testDictionary(): Create a hashed dictionary of names and phone numbers
Initial dictionary should be empty; isEmpty() returns true
Testing add():
11 (should be 11) items in dictionary, as follows:
**** Displaying dictionary size = 11
Tom (84274): 555-5555
Bette (64076450): 555-7891
Tabatha (111435105): 555-3456
Reiss (78842198): 555-2345
Carole (2011240948): 555-7892
Abel (2033832): 555-5678
Nancy (75033265): 555-7894
Derek (65921111): 555-7893
Miguel (-1990368815): 555-9012
Dirk (2130334): 555-1234
Sam (82879): 555-7890

*** Testing getValue(): ***
Abel:   555-5678 should be 555-5678
Sam:    555-7890 should be 555-7890
Tom:    555-5555 should be 555-5555
Reiss:  555-2345 should be 555-2345
Miguel: 555-9012 should be 555-9012
*** Testing contains(): ***
Sam is in dictionary - OK
Abel is in dictionary - OK
Miguel is in dictionary - OK
Tom is in dictionary - OK
Bo is not in dictionary - OK
Removing first item Abel - Abel's number is 555-5678 should be 555-5678
Replacing phone number of Reiss and Miguel:
Reiss's old number 555-2345 is replaced by 555-5432
Miguel's old number 555-9012 is replaced by 555-2109
Dictionary size is 10 (should be 10) items in dictionary, as follows:
**** Displaying dictionary size = 10
Tom (84274): 555-5555
Bette (64076450): 555-7891
Tabatha (111435105): 555-3456
Reiss (78842198): 555-5432
Carole (2011240948): 555-7892
Nancy (75033265): 555-7894
Derek (65921111): 555-7893
Miguel (-1990368815): 555-2109
Dirk (2130334): 555-1234
Sam (82879): 555-7890

Removing interior item Reiss:
Dictionary size is 9 (should be 9) items in dictionary, as follows:
**** Displaying dictionary size = 9
Tom (84274): 555-5555
Bette (64076450): 555-7891
Tabatha (111435105): 555-3456
Carole (2011240948): 555-7892
Nancy (75033265): 555-7894
Derek (65921111): 555-7893
Miguel (-1990368815): 555-2109
Dirk (2130334): 555-1234
Sam (82879): 555-7890

Removing Nancy:
Dictionary size is 8 (should be 8) items in dictionary, as follows:
**** Displaying dictionary size = 8
Tom (84274): 555-5555
Bette (64076450): 555-7891
Tabatha (111435105): 555-3456
Carole (2011240948): 555-7892
Derek (65921111): 555-7893
Miguel (-1990368815): 555-2109
Dirk (2130334): 555-1234
Sam (82879): 555-7890

Removing Bo (not in dictionary):
Bo was not found in the dictionary.
Dictionary size is 8 (should be 8) items in dictionary, as follows:
**** Displaying dictionary size = 8
Tom (84274): 555-5555
Bette (64076450): 555-7891
Tabatha (111435105): 555-3456
Carole (2011240948): 555-7892
Derek (65921111): 555-7893
Miguel (-1990368815): 555-2109
Dirk (2130334): 555-1234
Sam (82879): 555-7890

Testing clear():
Dictionary should be empty; isEmpty() returns true
-----------------------------------------------------------------------
testHashTable():
Create a dictionary whose initial hash table has 5 locations:
Initial dictionary should be empty; isEmpty() returns true
Testing add() - add 5 names:
Dictionary size is 5 (should be 5) items, as follows:

**** Displaying dictionary size = 5
hash 693 Tabatha  (693): 555-1234
hash 597 Tobbie  (597): 555-1236
hash 583 Tabbie  (583): 555-1237
hash 410 Toni  (410): 555-1235
hash 298 Tim  (298): 555-1238

Remove Tabatha, add Nancy:
Dictionary contains 5 (should be 5) items, as follows:

**** Displaying dictionary size = 5
hash 597 Tobbie  (597): 555-1236
hash 583 Tabbie  (583): 555-1237
hash 505 Nancy  (505): 555-1239
hash 410 Toni  (410): 555-1235
hash 298 Tim  (298): 555-1238

....................................
Remove Toni, add Derek:
Dictionary contains 5 (should be 5) items, as follows:

**** Displaying dictionary size = 5
hash 597 Tobbie  (597): 555-1236
hash 583 Tabbie  (583): 555-1237
hash 505 Nancy  (505): 555-1239
hash 298 Tim  (298): 555-1238
hash 491 Derek  (491): 555-1240

....................................
Remove Tabbie, add Carole:
Dictionary contains 5 (should be 5) items, as follows:

**** Displaying dictionary size = 5
hash 597 Tobbie  (597): 555-1236
hash 598 Carole  (598): 555-1241
hash 505 Nancy  (505): 555-1239
hash 298 Tim  (298): 555-1238
hash 491 Derek  (491): 555-1240

....................................
Remove Tobbie, add Bette:
Dictionary contains 5 (should be 5) items, as follows:

**** Displaying dictionary size = 5
hash 500 Bette  (500): 555-1242
hash 598 Carole  (598): 555-1241
hash 505 Nancy  (505): 555-1239
hash 298 Tim  (298): 555-1238
hash 491 Derek  (491): 555-1240

....................................
Remove Tim, add Reiss:
Dictionary contains 5 (should be 5) items, as follows:

**** Displaying dictionary size = 5
hash 500 Bette  (500): 555-1242
hash 598 Carole  (598): 555-1241
hash 518 Reiss  (518): 555-1243
hash 505 Nancy  (505): 555-1239
hash 491 Derek  (491): 555-1240

....................................
Remove Derek, add Miguel:
Dictionary contains 5 (should be 5) items, as follows:

**** Displaying dictionary size = 5
hash 611 Miguel  (611): 555-1244
hash 500 Bette  (500): 555-1242
hash 598 Carole  (598): 555-1241
hash 518 Reiss  (518): 555-1243
hash 505 Nancy  (505): 555-1239

....................................
Remove Bette, add Tom:
Dictionary contains 5 (should be 5) items, as follows:

**** Displaying dictionary size = 5
hash 304 Tom  (304): 555-1245
hash 611 Miguel  (611): 555-1244
hash 598 Carole  (598): 555-1241
hash 518 Reiss  (518): 555-1243
hash 505 Nancy  (505): 555-1239

....................................
Locate Reis, Carole, Nancy, and Zeke: 
Reis is in the dictionary 
Carole is in the dictionary 
Nancy is in the dictionary 
Zeke is NOT in the dictionary 


Done.

  */
